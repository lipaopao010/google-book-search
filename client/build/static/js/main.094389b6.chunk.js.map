{"version":3,"sources":["components/SearchInput/index.js","components/BookListItem/index.js","components/Booklist/index.js","utils/API.js","pages/search.js","pages/saved.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchInput","props","react_default","a","createElement","Form","onSubmit","onSearch","Group","controlId","Label","Control","value","search","placeholder","onChange","evt","onSearchChange","target","Button","variant","type","BookListItem","_ref","title","link","authors","image","description","onSave","onDelete","ListGroup","Item","Row","Col","xs","as","href","onClick","join","Image","src","alt","BookList","_ref$books","books","Card","Title","Body","map","book","Object","assign","key","id","API","searchBooks","_searchBooks","asyncToGenerator","regenerator_default","mark","_callee","url","response","wrap","_context","prev","next","concat","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","saveBook","_saveBook","_callee2","_context2","method","headers","Content-Type","body","JSON","stringify","_x2","Search","_useState","useState","_useState2","slicedToArray","setSearch","_useState3","_useState4","setBooks","results","preventDefault","items","volumeInfo","imageLinks","thumbnail","infoLink","Fragment","Saved","useEffect","axios","get","then","res","data","catch","err","console","log","Nav","Navbar","bg","expand","className","Link","App","react_router_dom","Container","react_router","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2SAIe,SAASA,EAAYC,GAChC,OACJC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,SAAWL,EAAMM,UACrBL,EAAAC,EAAAC,cAACC,EAAA,EAAKG,MAAN,CAAYC,UAAU,aACpBP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,MAAN,aACAR,EAAAC,EAAAC,cAACC,EAAA,EAAKM,QAAN,CACAC,MAASX,EAAMY,OACdC,YAAY,aACZC,SAAU,SAAAC,GAAG,OAAGf,EAAMgB,eAAeD,EAAIE,OAAON,WAGnDV,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,uCCXa,SAASC,EAATC,GAQb,IAPEC,EAOFD,EAPEC,MACAC,EAMFF,EANEE,KACAC,EAKFH,EALEG,QACAC,EAIFJ,EAJEI,MACAC,EAGFL,EAHEK,YACAC,EAEFN,EAFEM,OACAC,EACFP,EADEO,SAEA,OACI5B,EAAAC,EAAAC,cAAE2B,EAAA,EAAUC,KAAZ,KACI9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAKC,GAAM,IACPjC,EAAAC,EAAAC,cAAA,UAAKoB,IAETtB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACET,GAAQvB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQiB,GAAI,IAAIC,KAAOZ,EAAMP,OAAO,WAApC,QACRW,GAAU3B,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQmB,QAAU,WAC1BT,EAAO,CAACL,QAAME,UAAQE,cAAYD,QAAMF,WADhC,QAGVK,GAAY5B,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQmB,QAAUR,EAAUV,QAAU,UAAtC,YAIlBlB,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACAhC,EAAAC,EAAAC,cAAA,SAAIsB,GAAWA,EAAQa,KAAK,QAIhCrC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACAhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,IAAKd,EAAOe,IAAK,iBAG5BxC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACAhC,EAAAC,EAAAC,cAAA,aAAKwB,MCrCN,SAASe,EAATpB,GAAgC,IAAAqB,EAAArB,EAAZsB,aAAY,IAAAD,EAAJ,GAAIA,EAC3C,OACI1C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAC0C,EAAA,EAAKC,MAAN,gBACA7C,EAAAC,EAAAC,cAAC0C,EAAA,EAAKE,KAAN,KACI9C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACMc,EAAMI,IAAI,SAACC,GAAD,OAAShD,EAAAC,EAAAC,cAACkB,EAAD6B,OAAAC,OAAA,CAAcC,IAAMH,EAAKI,IAAQJ,SCR3D,IAAAK,EAAA,CAELC,YAFK,eAAAC,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAxD,EAAAyD,KAAA,SAAAC,EAEOrC,GAFP,IAAAsC,EAAAC,EAAA,OAAAJ,EAAAxD,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGDL,EAHC,iDAAAM,OAGqD5C,GAHrDyC,EAAAE,KAAA,EAIgBE,MAAMP,GAJtB,cAIDC,EAJCE,EAAAK,KAAAL,EAAAM,OAAA,SAKAR,EAASS,QALT,wBAAAP,EAAAQ,SAAAZ,MAAA,gBAAAa,GAAA,OAAAjB,EAAAkB,MAAAC,KAAAC,YAAA,GAQLC,SARK,eAAAC,EAAA5B,OAAAO,EAAA,EAAAP,CAAAQ,EAAAxD,EAAAyD,KAAA,SAAAoB,EAQI9B,GARJ,IAAAa,EAAA,OAAAJ,EAAAxD,EAAA6D,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EASgBE,MAAM,aAAc,CACvCa,OAAQ,OACRC,QAAS,CACLC,eAAiB,oBAErBC,KAAMC,KAAKC,UAAUrC,KAdlB,cASDa,EATCkB,EAAAX,KAAAW,EAAAV,OAAA,SAiBAR,EAASS,QAjBT,wBAAAS,EAAAR,SAAAO,MAAA,gBAAAQ,GAAA,OAAAT,EAAAJ,MAAAC,KAAAC,YAAA,ICOA,SAASY,IAAS,IAAAC,EACDC,mBAAS,IADRC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GACtB7E,EADsB+E,EAAA,GACdE,EADcF,EAAA,GAAAG,EAEHJ,mBAAS,IAFNK,EAAA7C,OAAA0C,EAAA,EAAA1C,CAAA4C,EAAA,GAEtBlD,EAFsBmD,EAAA,GAEfC,EAFeD,EAAA,GAIvBnE,EAAQ0B,EAAIuB,SAGZvE,EAAQ,eAAAgB,EAAA4B,OAAAO,EAAA,EAAAP,CAAAQ,EAAAxD,EAAAyD,KAAG,SAAAC,EAAO7C,GAAP,IAAAkF,EAAArD,EAAA,OAAAc,EAAAxD,EAAA6D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbnD,EAAImF,iBADSlC,EAAAE,KAAA,EAESZ,EAAIC,YAAY3C,GAFzB,OAEPqF,EAFOjC,EAAAK,KAGPzB,EAAQqD,EAAQE,MAAMnD,IAAI,SAACC,GAAD,MAAU,CACtCI,GAAIJ,EAAKI,GACT9B,MAAO0B,EAAKmD,WAAW7E,MACvBE,QAASwB,EAAKmD,WAAW3E,QACzBE,YAAasB,EAAKmD,WAAWzE,YAC7BD,MAAOuB,EAAKmD,WAAWC,WAAWC,UAClC9E,KAAMyB,EAAKmD,WAAWG,SACtB3E,YAGJoE,EAASpD,GAbI,wBAAAoB,EAAAQ,SAAAZ,MAAH,gBAAAa,GAAA,OAAAnD,EAAAoD,MAAAC,KAAAC,YAAA,GAiBd,OACI3E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsG,SAAA,KACIvG,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACAhC,EAAAC,EAAAC,cAACJ,EAAD,CACAa,OAAUA,EACVI,eAAiB6E,EACjBvF,SAAYA,MAIhBL,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACAhC,EAAAC,EAAAC,cAACuC,EAAD,CACAE,MAAOA,4BCvCR,SAAS6D,IAAQ,IAAAhB,EAEFC,mBAAS,IAFPC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAErB7C,EAFqB+C,EAAA,GAEdK,EAFcL,EAAA,GAyB5B,OAVAe,oBAAU,WAVNC,IAAMC,IAAI,cACTC,KAAK,SAAAC,GAAG,OACLd,EAASc,EAAIC,QAEhBC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAU3B,IAOChH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsG,SAAA,KACIvG,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACI/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACJhC,EAAAC,EAAAC,cAACuC,EAAD,CACIE,MAAOA,mBCnCR,SAASwE,IACpB,OACAnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAE1BtH,EAAAC,EAAAC,cAACiH,EAAD,CAAKI,UAAU,WACbvH,EAAAC,EAAAC,cAACiH,EAAIK,KAAL,CAAUrF,KAAK,WAAf,UACAnC,EAAAC,EAAAC,cAACiH,EAAIK,KAAL,CAAUrF,KAAK,UAAf,mCCyBSsF,MAxBf,WACE,OACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACA1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAACiH,EAAD,MACAnH,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,KACE5H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,YACvB9H,EAAAC,EAAAC,cAACqF,EAAD,OAGFvF,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAChB9H,EAAAC,EAAAC,cAACsG,EAAD,WCXJuB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT1B,KAAK,SAAA8B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,WAK1B/B,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM,SAAAkC,GACLhC,QAAQgC,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOnJ,EAAAC,EAAAC,cAACkJ,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwBvB,OAAOC,UAC3CuB,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAApE,OAAMsF,GAAN,sBAENzB,EAwCX,SAAiCO,GAE/BnE,MAAMmE,GACH1B,KAAK,SAAA/C,GAGkB,MAApBA,EAAS8F,SACuD,IAAhE9F,EAASoB,QAAQ0B,IAAI,gBAAgBiD,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMjD,KAAK,SAAA8B,GACjCA,EAAaoB,aAAalD,KAAK,WAC7BqB,OAAOC,SAAS6B,aAKpB1B,EAAgBC,KAGnBvB,MAAM,WACLE,QAAQC,IACN,mEAzDA8C,CAAwB1B,GAHxBD,EAAgBC,MC7BxB2B","file":"static/js/main.094389b6.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\n\nexport default function SearchInput(props) {\n    return(\n<Form onSubmit ={props.onSearch}>\n  <Form.Group controlId=\"booktitle\">\n    <Form.Label>Book</Form.Label>\n    <Form.Control \n    value = {props.search}\n     placeholder=\"Book Title\" \n     onChange={evt =>props.onSearchChange(evt.target.value)}\n        />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Search\n  </Button>\n</Form>\n    )\n}\n","import React from 'react';\nimport { Row , Col , ListGroup , Button, Image } from 'react-bootstrap';\n\n\nexport default function BookListItem({ \n    title, \n    link, \n    authors, \n    image, \n    description,\n    onSave,\n    onDelete\n}){\n    return (\n        < ListGroup.Item>\n            <Row>\n                <Col xs = {10}>\n                    <h2>{title}</h2>\n                </Col>\n                <Col>\n                { link && <Button as =\"a\" href ={link} target=\"_blank \">View</Button>}\n                { onSave && <Button onClick ={() => {\n                    onSave({title,authors,description,image,link});\n                    }}>Save</Button>}\n                { onDelete && <Button onClick ={onDelete} variant = \"danger\">Delete</Button>}\n                </Col>\n            </Row>\n        \n            <Row>\n                <Col>\n                <p>{authors && authors.join(' ')}</p>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                <Image src={image} alt =\"book cover\"/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                <p> {description}</p>\n                </Col>\n            </Row>\n        </ListGroup.Item>\n\n    )}","import React from 'react';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport BookListItem from '../BookListItem';\n\nexport default function BookList({ books = []}){\n    return(\n        <Card>\n            <Card.Title>Results</Card.Title>\n            <Card.Body>\n                <ListGroup>\n                    { books.map((book)=>(<BookListItem key ={book.id} {...book}/>))}\n                    \n                </ListGroup>\n            </Card.Body>\n        </Card>\n    )\n\n}","\n\nexport default {\n\n    async searchBooks(title){\n        const url =`https://www.googleapis.com/books/v1/volumes?q=${title}`;\n        const response = await fetch(url);\n        return response.json();\n    },\n\n    async saveBook(book) {\n        const response = await fetch('/api/books', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify(book),\n        });\n\n        return response.json();\n    }\n}","import React , {useState} from \"react\";\n\nimport { Row, Col } from \"react-bootstrap\";\nimport SearchInput from \"../components/SearchInput\";\nimport BookList from '../components/Booklist';\n\nimport API from '../utils/API';\n\n\nexport default function Search() {\n    const [search, setSearch] = useState('');\n    const [books, setBooks] = useState([]);\n\n    const onSave =API.saveBook;\n    \n\n    const onSearch = async (evt) =>{\n        evt.preventDefault();\n        const results = await API.searchBooks(search);\n        const books = results.items.map((book) =>({\n            id: book.id,\n            title: book.volumeInfo.title,\n            authors: book.volumeInfo.authors,\n            description: book.volumeInfo.description,\n            image: book.volumeInfo.imageLinks.thumbnail,\n            link: book.volumeInfo.infoLink,\n            onSave,\n        }));\n\n        setBooks(books)\n    }\n\n    \n    return(\n        <>\n            <Row>\n                <Col>\n                <SearchInput\n                search = {search}\n                onSearchChange ={setSearch}\n                onSearch = {onSearch}\n                />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                <BookList\n                books={books}\n                />\n                </Col>\n            </Row>\n        </>\n    )\n}","import React , { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { Row, Col } from \"react-bootstrap\";\nimport BookList from '../components/Booklist';\n\n\n\nexport default function Saved() {\n   \n    const [books, setBooks] = useState([]);\n\n    function getBooks(){\n        axios.get(\"/api/books\")\n        .then(res=>\n            setBooks(res.data)\n        )\n        .catch(err => console.log(err));\n    }\n\n        \n    \n\n    useEffect(() => {\n        \n        getBooks()\n        \n    }, [])\n\n    \n    // how to render the saved books from the database?\n\n    \n    return(\n        <>\n            <Row>\n                <Col>\n            <BookList\n                books={books}\n                />\n                </Col>\n            </Row>\n        </>\n    )\n}\n\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nexport default function Nav () {\n    return(\n    <Navbar bg=\"light\" expand=\"lg\">\n  \n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#Search\">Search</Nav.Link>\n      <Nav.Link href=\"#Saved\">Saved</Nav.Link>\n      \n    </Nav>\n    \n</Navbar>\n    )}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/search\";\nimport Saved from \"./pages/saved\";\nimport Nav from \"./components/Nav\"\nimport { Container } from \"react-bootstrap\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n    <Container>\n      <Nav /> \n      <Switch>\n        <Route exact path={[\"/\", \"/search\"]}>\n          <Search />\n        </Route>\n\n        <Route exact path=\"/saved\">\n          <Saved />\n        </Route>\n        \n        {/* <Route>\n          <NoMatch />\n        </Route> */}\n      </Switch>\n    </Container>\n  </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}